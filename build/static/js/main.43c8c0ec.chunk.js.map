{"version":3,"sources":["services/persons.js","App.js","index.js"],"names":["baseUrl","axios","get","then","response","data","newObject","post","id","put","delete","Notification","message","style","isError","color","background","fontSize","borderStyle","borderRadius","padding","marginBottom","msg","Filter","filterName","setFilter","value","onChange","event","target","PersonForm","persons","setPersons","setNotificationMessage","useState","newName","setNewName","newNumber","setNewNumber","onSubmit","preventDefault","some","person","name","window","confirm","personObject","number","find","console","log","personService","returnedPerson","map","setTimeout","catch","error","filter","n","concat","type","Persons","handleClick","Person","onClick","App","notificationMessage","useEffect","initialPersons","length","personsToDisplay","search","RegExp","personFilter","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.43c8c0ec.chunk.js","sourcesContent":["import axios from 'axios'\r\nconst baseUrl = '/api/persons'\r\n\r\nconst getAll = () => {\r\n  const request = axios.get(baseUrl)\r\n  return request.then(response => response.data)\r\n}\r\n\r\nconst create = newObject => {\r\n  const request = axios.post(baseUrl, newObject)\r\n  return request.then(response => response.data)\r\n}\r\n\r\nconst update = (id, newObject) => {\r\n  const request = axios.put(`${baseUrl}/${id}`, newObject)\r\n  return request.then(response => response.data)\r\n}\r\n\r\nconst deletePerson = (id) => {\r\n  return axios.delete(`${baseUrl}/${id}`)\r\n}\r\n\r\nexport default { getAll, create, update, deletePerson }","import React, { useState, useEffect } from 'react'\r\nimport personService from './services/persons'\r\n\r\nconst Notification = ({ message }) => {\r\n\r\n  if (message === null) {\r\n    return null\r\n  }\r\n\r\n  const errorStyle = {\r\n    color: 'red',\r\n    background: 'lightgrey',\r\n    fontSize: 20,\r\n    borderStyle: 'solid',\r\n    borderRadius: 5,\r\n    padding: 10,\r\n    marginBottom: 10\r\n  }\r\n\r\n  const infoStyle = {\r\n    color: 'green',\r\n    background: 'lightgrey',\r\n    fontSize: 20,\r\n    borderStyle: 'solid',\r\n    borderRadius: 5,\r\n    padding: 10,\r\n    marginBottom: 10\r\n  }\r\n\r\n  return (\r\n    <div style={message.isError ? errorStyle : infoStyle}>\r\n      {message.msg}\r\n    </div>\r\n  )\r\n}\r\n\r\nconst Filter = ({ filterName, setFilter }) => {\r\n  const handleFilterChange = (event) => {\r\n    setFilter(event.target.value)\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      filter shown with: <input\r\n                            value={filterName}\r\n                            onChange={handleFilterChange}/>\r\n    </div>\r\n  )\r\n}\r\n\r\nconst PersonForm = ( {persons, setPersons, setNotificationMessage} ) => {\r\n  const [ newName, setNewName ] = useState('')\r\n  const [ newNumber, setNewNumber ] = useState('')\r\n\r\n  const handleNameChange = (event) => {\r\n    setNewName(event.target.value)\r\n  }\r\n\r\n  const handleNumberChange = (event) => {\r\n    setNewNumber(event.target.value)\r\n  }\r\n \r\n  const addPerson = (event) => {\r\n    event.preventDefault()\r\n\r\n    if (!persons.some(person => person.name === newName))\r\n    {\r\n      const personObject = {name: newName, number: newNumber} \r\n  \r\n      personService\r\n        .create(personObject)\r\n        .then(returnedPerson => {\r\n          setPersons(persons.concat(returnedPerson))\r\n          setNewName('')\r\n          setNewNumber('')\r\n\r\n          setNotificationMessage(\r\n            {msg: `Added ${personObject.name}`, isError: false}\r\n          )\r\n          setTimeout(() => {\r\n            setNotificationMessage(null)\r\n          }, 5000)\r\n        })\r\n    }\r\n    else {\r\n      if(window.confirm(`${newName} is already added to phonebook, replace the old number with a new one?`)) {\r\n        const personObject = {name: newName, number: newNumber} \r\n\r\n        const id = persons.find(person => person.name === personObject.name).id\r\n\r\n        console.log(\"id to be updated\", id)\r\n\r\n        personService\r\n          .update(id, personObject)\r\n          .then(returnedPerson => {\r\n            setPersons(persons.map(person => person.id !== id ? person : returnedPerson))\r\n\r\n            setNotificationMessage(\r\n              {msg: `The number of ${personObject.name} was updated`, isError: false}\r\n            )\r\n            setTimeout(() => {\r\n              setNotificationMessage(null)\r\n            }, 5000)\r\n          })\r\n          .catch(error => {\r\n            setNotificationMessage(\r\n              {msg: `Information of ${personObject.name} was already removed from server`, isError: true}\r\n            )\r\n            setTimeout(() => {\r\n              setNotificationMessage(null)\r\n            }, 5000)\r\n            setPersons(persons.filter(n => n.id !== id))\r\n          })\r\n      }\r\n    }\r\n  }\r\n  \r\n  return (\r\n    <form onSubmit={addPerson}>\r\n      <div>\r\n        name: <input\r\n                value={newName}\r\n                onChange={handleNameChange}/>\r\n      </div>\r\n      <div>\r\n        number: <input\r\n                  value={newNumber}\r\n                  onChange={handleNumberChange}/>\r\n      </div>\r\n      <div>\r\n        <button type=\"submit\">add</button>\r\n      </div>\r\n    </form> \r\n  )\r\n}\r\n\r\nconst Persons = ( {persons, handleClick} ) => {\r\n  return (\r\n    <>\r\n      {persons.map(person => \r\n          <Person key={person.id} person={person} handleClick={handleClick}/>\r\n      )}\r\n    </>\r\n  )\r\n}\r\n\r\nconst Person = ( {person, handleClick}  ) => {\r\n\r\n  return (\r\n    <div>{person.name} {person.number} <button onClick={() => handleClick(person)}>Delete</button></div>\r\n  )\r\n}\r\n\r\n\r\n\r\nconst App = () => {\r\n  const [ persons, setPersons ] = useState([])\r\n  const [ filterName, setFilter ] = useState('')\r\n  const [notificationMessage, setNotificationMessage] = useState(null)\r\n\r\n  useEffect(() => {\r\n    personService\r\n      .getAll()\r\n      .then(initialPersons => {\r\n        setPersons(initialPersons)\r\n      })\r\n  }, [])\r\n  console.log('render', persons.length, 'persons')\r\n\r\n  const personsToDisplay = filterName === ''\r\n    ? persons\r\n    : persons.filter(person => person.name.search(new RegExp(filterName, 'i')) !== -1)\r\n\r\n  const handleDeletePerson = person => {\r\n    if(window.confirm(`Delete ${person.name}?`)) {\r\n      personService\r\n      .deletePerson(person.id)\r\n      .then(response => {\r\n        setPersons(persons.filter(personFilter => personFilter.id !== person.id))\r\n        console.log(\"delete response\", response)\r\n\r\n        setNotificationMessage(\r\n          {msg: `Deleted ${person.name}`, isError: false}\r\n        )\r\n        setTimeout(() => {\r\n          setNotificationMessage(null)\r\n        }, 5000)\r\n      })\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <h2>Phonebook</h2>\r\n      <Notification message={notificationMessage} />\r\n      <Filter filterName={filterName} setFilter={setFilter} />\r\n\r\n      <h3>add a new</h3>\r\n      <PersonForm persons={persons} setPersons={setPersons} setNotificationMessage={setNotificationMessage} />\r\n\r\n      <h2>Numbers</h2>\r\n      <Persons persons={personsToDisplay} handleClick={handleDeletePerson}/>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default App","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport App from './App'\r\n\r\nReactDOM.render(<App />, document.getElementById('root'))"],"sourceRoot":""}